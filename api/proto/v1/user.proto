syntax = "proto3";
package v1;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option go_package = ".;v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "user";
		version: "1.0";
		contact: {
			name: "somewhat project";
			url: "https://github.com/dhanusaputra/somewhat-server";
			email: "andreasdhanu@gmail.com";
        };
    };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    responses: {
		key: "400";
		value: {
			description: "400 Bad Request";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
    }
    responses: {
		key: "404";
		value: {
			description: "404 Not Found";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
    }
    responses: {
		key: "500";
		value: {
			description: "500 Internal Server Error";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
	}
};

// User ...
service User {
    // GetUser ...
    rpc GetUser (GetUserRequest) returns (GetUserResponse){
        option (google.api.http) = {
            get: "/v1/user/{id}"
        };
    }
    // ListUser ...
    rpc ListUser (ListUserRequest) returns (ListUserResponse){
        option (google.api.http) = {
            get: "/v1/user"
        };
    }
    // Login ...
    rpc Login (LoginRequest) returns (LoginResponse){
        option (google.api.http) = {
            post: "/v1/login"
            body: "*"
        };
    }
}

message GetUserRequest{
    string api = 1;
    string id = 2;
}

message GetUserResponse{
    string api = 1;
}

message ListUserRequest{
    string api = 1;
}

message ListUserResponse{
    string api = 1;
}

message LoginRequest{
    string api = 1;
    string username = 2;
    string password = 3;
}

message LoginResponse{
    string token = 1;
}